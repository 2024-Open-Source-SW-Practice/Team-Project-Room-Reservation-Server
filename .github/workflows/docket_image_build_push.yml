name: Spring docker image build and push to Docker Hub

on:
  push:
    branches: [ test/Github-action ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.gitignore'
  pull_request:
    branches: [ test ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.gitignore'


permissions:
  contents: write

jobs:
  Deploy-docker-image:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3 # repo에 있는 파일들 self-host 머신에 복제
      - name: Set up JDK 17 # jdk 셋업 17로 해야되나??
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle # gradle 셋업
        uses: gradle/gradle-build-action@v2

      - name: Build # JAR 빌드
        run: |
            chmod +x ./gradlew
            ./gradlew build

          #- name: Create Test Coverage Report
          # run: ./gradlew jacocoTestReport

          #- name: Upload coverage to Codecov
          # uses: codecov/codecov-action@v3.1.1
          #with:
        # file: ./build/reports/jacoco/test/jacocoTestReport.xml

        #- name: Unpack JAR # 언팩
        # run: |
        #  mkdir -p build/dependency && (cd build/dependency; jar -xf ../libs/*.jar)

      - name: Set lowercase repository name without owner environment variable
        run: |
            echo "REPOSITORY_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]' | cut -d'/' -f2)" >> $GITHUB_ENV

      - name: Get lowercase branch name
        run: |
            echo "BRANCH_NAME=$(echo $GITHUB_REF_NAME | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Get docker image name
        run: |
            echo "IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/${{ env.REPOSITORY_NAME }}:${{ env.BRANCH_NAME }}" >> $GITHUB_ENV

      - name: Build spring docker image
        run: |
            docker build -t ${{ env.IMAGE_NAME }} .
            docker tag ${{ env.IMAGE_NAME }} ${{ secrets.DOCKER_USERNAME }}/${{ env.REPOSITORY_NAME }}:latest
    

      #- name: Build nginx docker image
        #run: |
          #cd nginx
          #docker build -t rokgeun/nginx:develop .
          #docker tag rokgeun/nginx:develop rokgeun/nginx:latest

      - name: Push docker image
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker push ${{ env.IMAGE_NAME }}
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.REPOSITORY_NAME }}:latest
        #  docker push rokgeun/nginx:develop
        #  docker push rokgeun/nginx:latest
